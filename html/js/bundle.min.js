!function s(i,a,l){function c(o,e){if(!a[o]){if(!i[o]){var t="function"==typeof require&&require;if(!e&&t)return t(o,!0);if(f)return f(o,!0);var n=new Error("Cannot find module '"+o+"'");throw n.code="MODULE_NOT_FOUND",n}var r=a[o]={exports:{}};i[o][0].call(r.exports,function(e){return c(i[o][1][e]||e)},r,r.exports,s,i,a,l)}return a[o].exports}for(var f="function"==typeof require&&require,e=0;e<l.length;e++)c(l[e]);return c}({1:[function(e,o,t){"use strict";function s(e,o,t,n){"function"==typeof jQuery&&e instanceof jQuery&&(e=e[0],o=o[0]);var r=e.getBoundingClientRect(),s=o.getBoundingClientRect();switch(n){case"top":if(r.top<=s.top+t)return console.log("stop moving top"),!1;break;case"left":if(r.left<=s.left+t)return console.log("stop moving left"),!1;break;case"bottom":if(r.top>=s.bottom-4*t)return console.log("stop moving bottom"),!1;break;case"right":if(r.right>=s.right-t)return console.log("stop moving right"),!1}return!0}var n=$("body"),r=$("button.burger-box"),i=$("#player"),a=$("#stage");$(document).ready(function(){r.on("click",function(e){e.preventDefault(),$(this).hasClass("open")?($(this).removeClass("open").addClass("closed"),n.removeClass("nav-open"),n.removeClass("no-scroll")):($(this).addClass("open").removeClass("closed"),n.addClass("nav-open"),n.addClass("no-scroll"))});var o=function(e){var o=i.offset(),t=a.offset(),n=o.top-t.top,r=o.left-t.left;if(i.removeClass("looking-top looking-left looking-right looking-bottom"),i.addClass("looking-"+e),console.log(s(i,a,i.height()/2,e)),s(i,a,i.height()/2,e))switch(e){case"top":i.css("top",n-20);break;case"left":i.css("left",r-20);break;case"right":i.css("left",r+60);break;case"bottom":i.css("top",n+80)}},t={};$(document).keydown(function(e){switch(t[e.keyCode],i.addClass("moving"),t[e.keyCode]=!0,e.keyCode){case 87:o("top");break;case 65:o("left");break;case 68:o("right");break;case 83:o("bottom")}}),$(document).keyup(function(e){delete t[e.keyCode],setTimeout(function(){i.removeClass("moving")},100)})})},{}]},{},[1]);
//# sourceMappingURL=data:application/json;charset=utf8;base64,
