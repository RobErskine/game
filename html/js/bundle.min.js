!function s(a,r,l){function c(e,t){if(!r[e]){if(!a[e]){var n="function"==typeof require&&require;if(!t&&n)return n(e,!0);if(u)return u(e,!0);var o=new Error("Cannot find module '"+e+"'");throw o.code="MODULE_NOT_FOUND",o}var i=r[e]={exports:{}};a[e][0].call(i.exports,function(t){return c(a[e][1][t]||t)},i,i.exports,s,a,r,l)}return r[e].exports}for(var u="function"==typeof require&&require,t=0;t<l.length;t++)c(l[t]);return c}({1:[function(t,e,n){"use strict";function o(t){"function"==typeof jQuery&&t instanceof jQuery&&(t=t[0]);var e=t.getBoundingClientRect();e.top,e.bottom,$(window).height();return 0<=e.top&&0<=e.left&&e.bottom<=$(window).height()&&e.right<=$(window).width()}var i=$("body"),s=$("button.burger-box"),a=$("dialog.o_external-link-modal");$(document).ready(function(){$("form input").on("blur",function(){var t=$(this),e=t.closest("div");t.is(":invalid")?t.addClass("invalid"):(t.removeClass("invalid"),e.remove("p.error"))}),$("section.o_registration-form form").on("submit",function(){}),$("section.o_registration-form checkbox").on("change",function(){$(this).is(":checked")?$('button[name="submit"]').attr("disabled",!1):$('button[name="submit"]').attr("disabled",!0)}),$("span.accent").each(function(){o($(this))&&$(this).addClass("in-view")}),$(window).on("scroll",function(){$("span.accent").each(function(){o($(this))&&$(this).addClass("in-view")})}),$(".a_title-container").each(function(){o($(this))&&$(this).addClass("in-view")}),$(window).on("scroll",function(){$(".a_title-container").each(function(){o($(this))&&$(this).addClass("in-view")})}),$("img.callout").each(function(){o($(this))&&$(this).addClass("in-view")}),$(window).on("scroll",function(){$("img.callout").each(function(){o($(this))&&$(this).addClass("in-view")})}),s.on("click",function(t){t.preventDefault(),$(this).hasClass("open")?($(this).removeClass("open").addClass("closed"),i.removeClass("nav-open"),i.removeClass("no-scroll")):($(this).addClass("open").removeClass("closed"),i.addClass("nav-open"),i.addClass("no-scroll"))}),$("a").filter(function(){return this.hostname&&this.hostname!==location.hostname}).addClass("external"),i.on("click","a.external",function(t){t.preventDefault();var e=$(this);a.get(0).showModal(),a.addClass("open"),a.find("a").attr("href",e.attr("href"))}),i.on("click","button.close",function(t){a.removeClass("open"),setTimeout(function(t){a.get(0).close()},1e3)});var c,u,d,h=$(".o_quiz-block"),f=2,m=$("#output");function p(t){setTimeout(function(){$("body").hide(),window.location=t},5e3)}m&&m.html("1"),$(".o_quiz-block input").on("click",function(t){c=$(this).closest(".step"),u=$(this),d=f-1,setTimeout(function(){if(c.hasClass("step-2")){var t=u.attr("id").replace(/age/g,"");for(1==(t=parseInt(t))&&($("body").hide(),window.location="./results/threeb.html"),t+=1;t<7;)$(".step-4").find("#howOld"+t).closest(".container").hide(),t++}if(c.hasClass("step-8")){var e=$("input[name='q3']:checked").val(),n=$("input[name='q4']:checked").val(),o=$("input[name='q5']:checked").val(),i=$("input[name='q6']:checked").val(),s=$("input[name='q7']:checked").val(),a=$("input[name='q8']:checked").val();if(">3"==e)p("./results/three.html");else{var r=0;"18–30"!=n&&"31–39"!=n||r++,"Yes"==o&&r++,"Yes"==i&&r++,"No"==s&&r++,"Yes"==a&&r++,p(4<=r?"./results/two.html":"./results/three.html")}}c.hide(),h.removeClass("step"+d).addClass("step"+f),$(".step-"+f).show(),$("#progress").animate().val(f+1),m.html(f);var l=$(".progress-number").parent().width()/8*f-10;$(".progress-number").css("left",l),f++},1200)})})},{}]},{},[1]);
//# sourceMappingURL=data:application/json;charset=utf8;base64,
